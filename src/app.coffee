###
# Load Node.js built-in modules.
###
fs = require 'fs'
path = require 'path'

###
# Load NPM modules from the node_modules directory.
###
debug = require('debug') 'utility-bot:init'
Discord = require 'discord.js'
yaml = require 'js-yaml'

###
# Create the bot.
###
Bot = new Discord.Client()

###
# Require the application configuration.
#
# On failure, any errors will be thrown as any errors that may arise from here
# are unrecoverable errors that must not be dismissed.
###
try
  Bot.Config = fs.readFileSync path.resolve(__dirname, 'config.yml'), 'utf8'

  Bot.Config = yaml.safeLoad Bot.Config
  debug 'Loaded configuration file from config.yml.'
catch e
  debug 'Failed to load configuration YAML file:\n' + e
  throw e

###
# Require the application configuration.
#
# On failure, any errors will be thrown as any errors that may arise from here
# are unrecoverable errors that must not be dismissed.
###
try
  Bot.Language = fs.readFileSync path.resolve(__dirname, 'Languages', "#{Bot.Config.personalization.language}.yml"), 'utf8'

  Bot.Language = yaml.safeLoad Bot.Language
  debug "Loaded language data from #{Bot.Config.personalization.language}.yml."
catch e
  debug "Failed to load language data from #{Bot.Config.personalization.language}.yml:\n" + e
  throw e

###
# Load events into Bot.
###
require('./lib/Events/Events') Bot

###
# Finally, authenticate the bot and start everything up.
###
Bot.login Bot.Config.discordAuth.email, Bot.Config.discordAuth.password
.then (token) ->
  debug 'Authenticated into DiscordApp successfully. Auth token: ' + token
.catch (err) ->
  debug 'Failed to sign into DiscordApp:\n' + err

  throw err

###
# Handle rogue ECONNRESETs generated by skipping songs. This is a fallback, this
# issue should have been fixed already.
###
process.on 'uncaughtException', (err) ->
  # Handle ECONNRESETs caused by problems with the libraries
  if err.code == 'ECONNRESET'
    console.log 'ECONNRESET! Stacktrace:\n' + err.stack
  else
    # Normal error handling
    console.log err
    console.log err.stack
    process.exit 1

module.exports = Bot
